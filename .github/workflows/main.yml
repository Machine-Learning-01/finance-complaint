name: Continuous Integration and Deployment Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read


jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"


  build-and-push-image:
    name: Continuous Build and Delivery
    needs: integration
    runs-on: ubuntu-latest
    env:
      REPOSITORY: finance-complaint
      IMAGE_NAME: finance-complaint
      IMAGE_TAG: latest
      PROJECT_ID: our-velocity-363109
      GAR_LOCATION: asia-south1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: asia.gcr.io
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Login to Artifact Registry
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Docker build
        run: docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG .

      - name: Docker Push
        run: docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG

  pull-and-deploy:
    name: Continuous Deployment
    needs: build-and-push-image
    runs-on: self-hosted
    env:
      REPOSITORY: finance-complaint
      IMAGE_NAME: finance-complaint
      IMAGE_TAG: latest
      PROJECT_ID: our-velocity-363109
      GAR_LOCATION: asia-south1
      TRAINING: 1
      PREDICTION: 0
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: asia.gcr.io
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Login to Artifact Registry
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Authenticate to Artifact Registry
        run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin $GAR_LOCATION-docker.pkg.dev

      - name: Pull docker image
        run: |
         docker pull ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
      - name: Run Docker Image to serve users
        run: |
         export IMAGE_NAME=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" MONGO_DB_URL="${{ secrets.MONGO_DB_URL }}"  AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }} && docker compose up -d
      - name: Docker System Prune to Remove Old Images
        run: |
         docker system prune -f

